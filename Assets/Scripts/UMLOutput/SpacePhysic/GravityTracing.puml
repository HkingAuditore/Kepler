@startuml
interface ITraceable {
    GetTransform() : Transform
    GetPosition() : Vector3
    GetGameObject() : GameObject
    GetEnableTracing() : bool
    GetMass() : float
    GetRigidbody() : Rigidbody
    GetVelocity() : Vector3
    GetAffectedPlanets() : List<AstralBody>
    GetAstralBody() : AstralBody
}
enum ActionType {
    Finished,
}
class GravityTracing {
    + sample : int = 20
    + timeScale : float = 100
    + isFreezing : bool <<get>>
    + Awake() : void
    + AddTracingTarget(traceable:ITraceable) : void
    + Freeze(isFreezing:bool) : void
    + GetAstralBodyList() : List<AstralBody>
    + RemoveAstralBody(astralBody:AstralBody) : void
    + DrawOrbits() : void
    + GetConicSection(astralBody:ITraceable) : ConicSection
    + DrawMathOrbit(conicSection:ConicSection, sam:int) : void
}
MonoBehaviour <|-- GravityTracing
GravityTracing --> "splineComputer" SplineComputer
@enduml
